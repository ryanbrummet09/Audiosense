load('CSR_Linear_sp_NoNorm_SUM_DemoTRUE.mat');
minimum = min([min(dummyTrainingTable.score),min(dummyValidationTable.score),min(modelScoresTraining),min(modelScoresValidation)]);
maximum = max([max(dummyTrainingTable.score),max(dummyValidationTable.score),max(modelScoresTraining),max(modelScoresValidation)]);
load('CSR_Linear_le_NoNorm_SUM_DemoTRUE.mat');
minimum = min([minimum,min(dummyTrainingTable.score),min(dummyValidationTable.score),min(modelScoresTraining),min(modelScoresValidation)]);
maximum = max([maximum,max(dummyTrainingTable.score),max(dummyValidationTable.score),max(modelScoresTraining),max(modelScoresValidation)]);
load('CSR_Linear_ld_NoNorm_SUM_DemoTRUE.mat');
minimum = min([minimum,min(dummyTrainingTable.score),min(dummyValidationTable.score),min(modelScoresTraining),min(modelScoresValidation)]);
maximum = max([maximum,max(dummyTrainingTable.score),max(dummyValidationTable.score),max(modelScoresTraining),max(modelScoresValidation)]);
load('CSR_Linear_ld2_NoNorm_SUM_DemoTRUE.mat');
minimum = min([minimum,min(dummyTrainingTable.score),min(dummyValidationTable.score),min(modelScoresTraining),min(modelScoresValidation)]);
maximum = max([maximum,max(dummyTrainingTable.score),max(dummyValidationTable.score),max(modelScoresTraining),max(modelScoresValidation)]);
load('CSR_Linear_lcl_NoNorm_SUM_DemoTRUE.mat');
minimum = min([minimum,min(dummyTrainingTable.score),min(dummyValidationTable.score),min(modelScoresTraining),min(modelScoresValidation)]);
maximum = max([maximum,max(dummyTrainingTable.score),max(dummyValidationTable.score),max(modelScoresTraining),max(modelScoresValidation)]);
load('CSR_Linear_ap_NoNorm_SUM_DemoTRUE.mat');
minimum = min([minimum,min(dummyTrainingTable.score),min(dummyValidationTable.score),min(modelScoresTraining),min(modelScoresValidation)]);
maximum = max([maximum,max(dummyTrainingTable.score),max(dummyValidationTable.score),max(modelScoresTraining),max(modelScoresValidation)]);
load('CSR_Linear_qol_NoNorm_SUM_DemoTRUE.mat');
minimum = min([minimum,min(dummyTrainingTable.score),min(dummyValidationTable.score),min(modelScoresTraining),min(modelScoresValidation)]);
maximum = max([maximum,max(dummyTrainingTable.score),max(dummyValidationTable.score),max(modelScoresTraining),max(modelScoresValidation)]);
load('CSR_Linear_im_NoNorm_SUM_DemoTRUE.mat');
minimum = min([minimum,min(dummyTrainingTable.score),min(dummyValidationTable.score),min(modelScoresTraining),min(modelScoresValidation)]);
maximum = max([maximum,max(dummyTrainingTable.score),max(dummyValidationTable.score),max(modelScoresTraining),max(modelScoresValidation)]);
load('CSR_Linear_st_NoNorm_SUM_DemoTRUE.mat');
minimum = min([minimum,min(dummyTrainingTable.score),min(dummyValidationTable.score),min(modelScoresTraining),min(modelScoresValidation)]);
maximum = max([maximum,max(dummyTrainingTable.score),max(dummyValidationTable.score),max(modelScoresTraining),max(modelScoresValidation)]);

load('CSR_Linear_sp_NoNorm_SUM_DemoTRUE.mat');
trainReal = 100 * (dummyTrainingTable.score - minimum) / (maximum - minimum);
valReal = 100 * (dummyValidationTable.score - minimum) / (maximum - minimum);
trainPred = 100 * (modelScoresTraining - minimum) / (maximum - minimum);
valPred = 100 * (modelScoresValidation - minimum) / (maximum - minimum);
absErrorTrainingSP = abs(trainReal - trainPred);
absErrorValidationSP = abs(valReal - valPred);
load('CSR_Linear_le_NoNorm_SUM_DemoTRUE.mat');
trainReal = 100 * (dummyTrainingTable.score - minimum) / (maximum - minimum);
valReal = 100 * (dummyValidationTable.score - minimum) / (maximum - minimum);
trainPred = 100 * (modelScoresTraining - minimum) / (maximum - minimum);
valPred = 100 * (modelScoresValidation - minimum) / (maximum - minimum);
absErrorTrainingLE = abs(trainReal - trainPred);
absErrorValidationLE = abs(valReal - valPred);
load('CSR_Linear_ld_NoNorm_SUM_DemoTRUE.mat');
trainReal = 100 * (dummyTrainingTable.score - minimum) / (maximum - minimum);
valReal = 100 * (dummyValidationTable.score - minimum) / (maximum - minimum);
trainPred = 100 * (modelScoresTraining - minimum) / (maximum - minimum);
valPred = 100 * (modelScoresValidation - minimum) / (maximum - minimum);
absErrorTrainingLD = abs(trainReal - trainPred);
absErrorValidationLD = abs(valReal - valPred);
load('CSR_Linear_ld2_NoNorm_SUM_DemoTRUE.mat');
trainReal = 100 * (dummyTrainingTable.score - minimum) / (maximum - minimum);
valReal = 100 * (dummyValidationTable.score - minimum) / (maximum - minimum);
trainPred = 100 * (modelScoresTraining - minimum) / (maximum - minimum);
valPred = 100 * (modelScoresValidation - minimum) / (maximum - minimum);
absErrorTrainingLD2 = abs(trainReal - trainPred);
absErrorValidationLD2 = abs(valReal - valPred);
load('CSR_Linear_lcl_NoNorm_SUM_DemoTRUE.mat');
trainReal = 100 * (dummyTrainingTable.score - minimum) / (maximum - minimum);
valReal = 100 * (dummyValidationTable.score - minimum) / (maximum - minimum);
trainPred = 100 * (modelScoresTraining - minimum) / (maximum - minimum);
valPred = 100 * (modelScoresValidation - minimum) / (maximum - minimum);
absErrorTrainingLCL = abs(trainReal - trainPred);
absErrorValidationLCL = abs(valReal - valPred);
load('CSR_Linear_ap_NoNorm_SUM_DemoTRUE.mat');
trainReal = 100 * (dummyTrainingTable.score - minimum) / (maximum - minimum);
valReal = 100 * (dummyValidationTable.score - minimum) / (maximum - minimum);
trainPred = 100 * (modelScoresTraining - minimum) / (maximum - minimum);
valPred = 100 * (modelScoresValidation - minimum) / (maximum - minimum);
absErrorTrainingAP = abs(trainReal - trainPred);
absErrorValidationAP = abs(valReal - valPred);
load('CSR_Linear_qol_NoNorm_SUM_DemoTRUE.mat');
trainReal = 100 * (dummyTrainingTable.score - minimum) / (maximum - minimum);
valReal = 100 * (dummyValidationTable.score - minimum) / (maximum - minimum);
trainPred = 100 * (modelScoresTraining - minimum) / (maximum - minimum);
valPred = 100 * (modelScoresValidation - minimum) / (maximum - minimum);
absErrorTrainingQOL = abs(trainReal - trainPred);
absErrorValidationQOL = abs(valReal - valPred);
load('CSR_Linear_im_NoNorm_SUM_DemoTRUE.mat');
trainReal = 100 * (dummyTrainingTable.score - minimum) / (maximum - minimum);
valReal = 100 * (dummyValidationTable.score - minimum) / (maximum - minimum);
trainPred = 100 * (modelScoresTraining - minimum) / (maximum - minimum);
valPred = 100 * (modelScoresValidation - minimum) / (maximum - minimum);
absErrorTrainingIM = abs(trainReal - trainPred);
absErrorValidationIM = abs(valReal - valPred);
load('CSR_Linear_st_NoNorm_SUM_DemoTRUE.mat');
trainReal = 100 * (dummyTrainingTable.score - minimum) / (maximum - minimum);
valReal = 100 * (dummyValidationTable.score - minimum) / (maximum - minimum);
trainPred = 100 * (modelScoresTraining - minimum) / (maximum - minimum);
valPred = 100 * (modelScoresValidation - minimum) / (maximum - minimum);
absErrorTrainingST = abs(trainReal - trainPred);
absErrorValidationST = abs(valReal - valPred);



figure;
subplot(1,2,1);
hold on;
a = cdfplot(absErrorTrainingSP);
set(a,'Color',[0 0 0],'LineStyle','-');
a = cdfplot(absErrorTrainingLE);
set(a,'Color',[0 0 1],'LineStyle','-');
a = cdfplot(absErrorTrainingLD);
set(a,'Color',[0 1 0],'LineStyle','-');
a = cdfplot(absErrorTrainingLD2);
set(a,'Color',[0 1 1],'LineStyle','-');
a = cdfplot(absErrorTrainingLCL);
set(a,'Color',[1 0 0],'LineStyle','-');
a = cdfplot(absErrorTrainingAP);
set(a,'Color',[1 0 1],'LineStyle','-');
a = cdfplot(absErrorTrainingQOL);
set(a,'Color',[1 1 0],'LineStyle','-');
a = cdfplot(absErrorTrainingIM);
set(a,'Color',[0 0 0],'LineStyle',':');
a = cdfplot(absErrorTrainingST);
set(a,'Color',[0 0 1],'LineStyle',':');
legend('SP: .6641','LE: .6170','LD: .6676','LD2: .6701','LCL: .6574','AP: .6085','QOL: .6570','IM: .7005','ST: .6535');
title('Training Error');
axis([0,500,0,1]);
hold off;

subplot(1,2,2);
hold on;
a = cdfplot(absErrorValidationSP);
set(a,'Color',[0 0 0],'LineStyle','-');
a = cdfplot(absErrorValidationLE);
set(a,'Color',[0 0 1],'LineStyle','-');
a = cdfplot(absErrorValidationLD);
set(a,'Color',[0 1 0],'LineStyle','-');
a = cdfplot(absErrorValidationLD2);
set(a,'Color',[0 1 1],'LineStyle','-');
a = cdfplot(absErrorValidationLCL);
set(a,'Color',[1 0 0],'LineStyle','-');
a = cdfplot(absErrorValidationAP);
set(a,'Color',[1 0 1],'LineStyle','-');
a = cdfplot(absErrorValidationQOL);
set(a,'Color',[1 1 0],'LineStyle','-');
a = cdfplot(absErrorValidationIM);
set(a,'Color',[0 0 0],'LineStyle',':');
a = cdfplot(absErrorValidationST);
set(a,'Color',[0 0 1],'LineStyle',':');
legend('SP','LE','LD','LD2','LCL','AP','QOL','IM','ST');
title('Validation Error');
axis([0,500,0,1]);
hold off;


%---------norm below-----------
minimum = inf;
maximum = -inf;
%load('CSR_Linear_sp_UserNorm_SUM_DemoTRUE.mat');
%minimum = min([min(dummyTrainingTable.score),min(dummyValidationTable.score),min(modelScoresTraining),min(modelScoresValidation)]);
%maximum = max([max(dummyTrainingTable.score),max(dummyValidationTable.score),max(modelScoresTraining),max(modelScoresValidation)]);
load('CSR_Linear_le_UserNorm_SUM_DemoTRUE.mat');
minimum = min([minimum,min(dummyTrainingTable.score),min(dummyValidationTable.score),min(modelScoresTraining),min(modelScoresValidation)]);
maximum = max([maximum,max(dummyTrainingTable.score),max(dummyValidationTable.score),max(modelScoresTraining),max(modelScoresValidation)]);
load('CSR_Linear_ld_UserNorm_SUM_DemoTRUE.mat');
minimum = min([minimum,min(dummyTrainingTable.score),min(dummyValidationTable.score),min(modelScoresTraining),min(modelScoresValidation)]);
maximum = max([maximum,max(dummyTrainingTable.score),max(dummyValidationTable.score),max(modelScoresTraining),max(modelScoresValidation)]);
load('CSR_Linear_ld2_UserNorm_SUM_DemoTRUE.mat');
minimum = min([minimum,min(dummyTrainingTable.score),min(dummyValidationTable.score),min(modelScoresTraining),min(modelScoresValidation)]);
maximum = max([maximum,max(dummyTrainingTable.score),max(dummyValidationTable.score),max(modelScoresTraining),max(modelScoresValidation)]);
load('CSR_Linear_lcl_UserNorm_SUM_DemoTRUE.mat');
minimum = min([minimum,min(dummyTrainingTable.score),min(dummyValidationTable.score),min(modelScoresTraining),min(modelScoresValidation)]);
maximum = max([maximum,max(dummyTrainingTable.score),max(dummyValidationTable.score),max(modelScoresTraining),max(modelScoresValidation)]);
load('CSR_Linear_ap_UserNorm_SUM_DemoTRUE.mat');
minimum = min([minimum,min(dummyTrainingTable.score),min(dummyValidationTable.score),min(modelScoresTraining),min(modelScoresValidation)]);
maximum = max([maximum,max(dummyTrainingTable.score),max(dummyValidationTable.score),max(modelScoresTraining),max(modelScoresValidation)]);
load('CSR_Linear_qol_UserNorm_SUM_DemoTRUE.mat');
minimum = min([minimum,min(dummyTrainingTable.score),min(dummyValidationTable.score),min(modelScoresTraining),min(modelScoresValidation)]);
maximum = max([maximum,max(dummyTrainingTable.score),max(dummyValidationTable.score),max(modelScoresTraining),max(modelScoresValidation)]);
load('CSR_Linear_im_UserNorm_SUM_DemoTRUE.mat');
minimum = min([minimum,min(dummyTrainingTable.score),min(dummyValidationTable.score),min(modelScoresTraining),min(modelScoresValidation)]);
maximum = max([maximum,max(dummyTrainingTable.score),max(dummyValidationTable.score),max(modelScoresTraining),max(modelScoresValidation)]);
load('CSR_Linear_st_UserNorm_SUM_DemoTRUE.mat');
minimum = min([minimum,min(dummyTrainingTable.score),min(dummyValidationTable.score),min(modelScoresTraining),min(modelScoresValidation)]);
maximum = max([maximum,max(dummyTrainingTable.score),max(dummyValidationTable.score),max(modelScoresTraining),max(modelScoresValidation)]);

%load('CSR_Linear_sp_UserNorm_SUM_DemoTRUE.mat');
%trainReal = 100 * (dummyTrainingTable.score - minimum) / (maximum - minimum);
%valReal = 100 * (dummyValidationTable.score - minimum) / (maximum - minimum);
%trainPred = 100 * (modelScoresTraining - minimum) / (maximum - minimum);
%valPred = 100 * (modelScoresValidation - minimum) / (maximum - minimum);
%absErrorTrainingSP = abs(trainReal - trainPred);
%absErrorValidationSP = abs(valReal - valPred);
load('CSR_Linear_le_UserNorm_SUM_DemoTRUE.mat');
trainReal = 100 * (dummyTrainingTable.score - minimum) / (maximum - minimum);
valReal = 100 * (dummyValidationTable.score - minimum) / (maximum - minimum);
trainPred = 100 * (modelScoresTraining - minimum) / (maximum - minimum);
valPred = 100 * (modelScoresValidation - minimum) / (maximum - minimum);
absErrorTrainingLE = abs(trainReal - trainPred);
absErrorValidationLE = abs(valReal - valPred);
load('CSR_Linear_ld_UserNorm_SUM_DemoTRUE.mat');
trainReal = 100 * (dummyTrainingTable.score - minimum) / (maximum - minimum);
valReal = 100 * (dummyValidationTable.score - minimum) / (maximum - minimum);
trainPred = 100 * (modelScoresTraining - minimum) / (maximum - minimum);
valPred = 100 * (modelScoresValidation - minimum) / (maximum - minimum);
absErrorTrainingLD = abs(trainReal - trainPred);
absErrorValidationLD = abs(valReal - valPred);
load('CSR_Linear_ld2_UserNorm_SUM_DemoTRUE.mat');
trainReal = 100 * (dummyTrainingTable.score - minimum) / (maximum - minimum);
valReal = 100 * (dummyValidationTable.score - minimum) / (maximum - minimum);
trainPred = 100 * (modelScoresTraining - minimum) / (maximum - minimum);
valPred = 100 * (modelScoresValidation - minimum) / (maximum - minimum);
absErrorTrainingLD2 = abs(trainReal - trainPred);
absErrorValidationLD2 = abs(valReal - valPred);
load('CSR_Linear_lcl_UserNorm_SUM_DemoTRUE.mat');
trainReal = 100 * (dummyTrainingTable.score - minimum) / (maximum - minimum);
valReal = 100 * (dummyValidationTable.score - minimum) / (maximum - minimum);
trainPred = 100 * (modelScoresTraining - minimum) / (maximum - minimum);
valPred = 100 * (modelScoresValidation - minimum) / (maximum - minimum);
absErrorTrainingLCL = abs(trainReal - trainPred);
absErrorValidationLCL = abs(valReal - valPred);
load('CSR_Linear_ap_UserNorm_SUM_DemoTRUE.mat');
trainReal = 100 * (dummyTrainingTable.score - minimum) / (maximum - minimum);
valReal = 100 * (dummyValidationTable.score - minimum) / (maximum - minimum);
trainPred = 100 * (modelScoresTraining - minimum) / (maximum - minimum);
valPred = 100 * (modelScoresValidation - minimum) / (maximum - minimum);
absErrorTrainingAP = abs(trainReal - trainPred);
absErrorValidationAP = abs(valReal - valPred);
load('CSR_Linear_qol_UserNorm_SUM_DemoTRUE.mat');
trainReal = 100 * (dummyTrainingTable.score - minimum) / (maximum - minimum);
valReal = 100 * (dummyValidationTable.score - minimum) / (maximum - minimum);
trainPred = 100 * (modelScoresTraining - minimum) / (maximum - minimum);
valPred = 100 * (modelScoresValidation - minimum) / (maximum - minimum);
absErrorTrainingQOL = abs(trainReal - trainPred);
absErrorValidationQOL = abs(valReal - valPred);
load('CSR_Linear_im_UserNorm_SUM_DemoTRUE.mat');
trainReal = 100 * (dummyTrainingTable.score - minimum) / (maximum - minimum);
valReal = 100 * (dummyValidationTable.score - minimum) / (maximum - minimum);
trainPred = 100 * (modelScoresTraining - minimum) / (maximum - minimum);
valPred = 100 * (modelScoresValidation - minimum) / (maximum - minimum);
absErrorTrainingIM = abs(trainReal - trainPred);
absErrorValidationIM = abs(valReal - valPred);
load('CSR_Linear_st_UserNorm_SUM_DemoTRUE.mat');
trainReal = 100 * (dummyTrainingTable.score - minimum) / (maximum - minimum);
valReal = 100 * (dummyValidationTable.score - minimum) / (maximum - minimum);
trainPred = 100 * (modelScoresTraining - minimum) / (maximum - minimum);
valPred = 100 * (modelScoresValidation - minimum) / (maximum - minimum);
absErrorTrainingST = abs(trainReal - trainPred);
absErrorValidationST = abs(valReal - valPred);

figure;
subplot(1,2,1);
hold on;
%a = cdfplot(absErrorTrainingSP);
%set(a,'Color',[0 0 0],'LineStyle','-');
a = cdfplot(absErrorTrainingLE);
set(a,'Color',[0 0 1],'LineStyle','-');
a = cdfplot(absErrorTrainingLD);
set(a,'Color',[0 1 0],'LineStyle','-');
a = cdfplot(absErrorTrainingLD2);
set(a,'Color',[0 1 1],'LineStyle','-');
a = cdfplot(absErrorTrainingLCL);
set(a,'Color',[1 0 0],'LineStyle','-');
a = cdfplot(absErrorTrainingAP);
set(a,'Color',[1 0 1],'LineStyle','-');
a = cdfplot(absErrorTrainingQOL);
set(a,'Color',[1 1 0],'LineStyle','-');
a = cdfplot(absErrorTrainingIM);
set(a,'Color',[0 0 0],'LineStyle',':');
a = cdfplot(absErrorTrainingST);
set(a,'Color',[0 0 1],'LineStyle',':');
legend('SP: ERROR','LE: .6139','LD: .6763','LD2: .6755','LCL: .6881','AP: .6073','QOL: .6794','IM: .6806','ST: .6862');
title('Training Error');
axis([0,500,0,1]);
hold off;

subplot(1,2,2);
hold on;
%a = cdfplot(absErrorValidationSP);
%set(a,'Color',[0 0 0],'LineStyle','-');
a = cdfplot(absErrorValidationLE);
set(a,'Color',[0 0 1],'LineStyle','-');
a = cdfplot(absErrorValidationLD);
set(a,'Color',[0 1 0],'LineStyle','-');
a = cdfplot(absErrorValidationLD2);
set(a,'Color',[0 1 1],'LineStyle','-');
a = cdfplot(absErrorValidationLCL);
set(a,'Color',[1 0 0],'LineStyle','-');
a = cdfplot(absErrorValidationAP);
set(a,'Color',[1 0 1],'LineStyle','-');
a = cdfplot(absErrorValidationQOL);
set(a,'Color',[1 1 0],'LineStyle','-');
a = cdfplot(absErrorValidationIM);
set(a,'Color',[0 0 0],'LineStyle',':');
a = cdfplot(absErrorValidationST);
set(a,'Color',[0 0 1],'LineStyle',':');
legend('SP','LE','LD','LD2','LCL','AP','QOL','IM','ST');
title('Validation Error');
axis([0,500,0,1]);
hold off;


